#!/bin/bash

# Captura o nome da última tag
TAG=$(git describe --tags --abbrev=0)

# Se não houver tag, define a versão inicial
if [ -z "$TAG" ]; then
  TAG="v0.1.0"
fi

# Pergunta interativa para o tipo de mudança (major, minor, patch)
echo "Última tag: $TAG"
echo "Escolha o tipo de mudança para a versão (major, minor ou patch):"
echo "Digite major | minor | patch"
read -p "Tipo de mudança: " CHANGE_TYPE

# Valida o tipo de mudança
if [[ "$CHANGE_TYPE" != "major" && "$CHANGE_TYPE" != "minor" && "$CHANGE_TYPE" != "patch" ]]; then
  echo "Erro: Tipo de mudança inválido! Apenas major, minor ou patch são aceitos."
  exit 1
fi

# Usa o comando `semver` para calcular a nova versão
NEW_TAG=$(semver bump $CHANGE_TYPE $TAG)
echo "Nova versão: $NEW_TAG"

# Cria a nova tag no Git
git tag $NEW_TAG
git push origin $NEW_TAG

# Verifica se o GoReleaser está instalado
if ! command -v goreleaser &> /dev/null; then
  echo "Erro: GoReleaser não encontrado. Certifique-se de que o GoReleaser está instalado."
  exit 1
fi

# Executa o GoReleaser para criar a release
echo "Executando GoReleaser..."
goreleaser release --rm-dist

if [ $? -ne 0 ]; then
  echo "Erro ao executar GoReleaser!"
  exit 1
fi

echo "Release e tag criados com sucesso!"
